// Code generated by protoc-gen-go. DO NOT EDIT.
// source: conversation.proto

package pingpong_conversation

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/infobloxopen/protoc-gen-gorm/options"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Action int32

const (
	Action_LIST   Action = 0
	Action_REMOVE Action = 1
	Action_NEW    Action = 2
)

var Action_name = map[int32]string{
	0: "LIST",
	1: "REMOVE",
	2: "NEW",
}

var Action_value = map[string]int32{
	"LIST":   0,
	"REMOVE": 1,
	"NEW":    2,
}

func (x Action) String() string {
	return proto.EnumName(Action_name, int32(x))
}

func (Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d6ae46d001825652, []int{0}
}

type Conversation struct {
	// An identifier for the conversation that is unique within the collection thereof
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The conversation's user-selected display name
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// The url to the conversation's user-selected avatar
	ImageUrl string `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	// The time at which the conversation was created
	CreatedTime *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	// The time at which the conversation was last updated
	UpdatedTime          *timestamp.Timestamp `protobuf:"bytes,5,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Conversation) Reset()         { *m = Conversation{} }
func (m *Conversation) String() string { return proto.CompactTextString(m) }
func (*Conversation) ProtoMessage()    {}
func (*Conversation) Descriptor() ([]byte, []int) {
	return fileDescriptor_d6ae46d001825652, []int{0}
}

func (m *Conversation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Conversation.Unmarshal(m, b)
}
func (m *Conversation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Conversation.Marshal(b, m, deterministic)
}
func (m *Conversation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Conversation.Merge(m, src)
}
func (m *Conversation) XXX_Size() int {
	return xxx_messageInfo_Conversation.Size(m)
}
func (m *Conversation) XXX_DiscardUnknown() {
	xxx_messageInfo_Conversation.DiscardUnknown(m)
}

var xxx_messageInfo_Conversation proto.InternalMessageInfo

func (m *Conversation) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Conversation) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Conversation) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

func (m *Conversation) GetCreatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedTime
	}
	return nil
}

func (m *Conversation) GetUpdatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedTime
	}
	return nil
}

func init() {
	proto.RegisterEnum("pingpong.conversation.Action", Action_name, Action_value)
	proto.RegisterType((*Conversation)(nil), "pingpong.conversation.Conversation")
}

func init() { proto.RegisterFile("conversation.proto", fileDescriptor_d6ae46d001825652) }

var fileDescriptor_d6ae46d001825652 = []byte{
	// 301 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x8f, 0x41, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0x4d, 0xb7, 0xd5, 0x2d, 0x1b, 0x32, 0x02, 0x42, 0x9d, 0x07, 0xa7, 0x17, 0x87, 0xb0,
	0x14, 0xf4, 0x36, 0xf0, 0x20, 0xb2, 0x83, 0xa0, 0x13, 0xea, 0xd4, 0xe3, 0x48, 0xdb, 0x2c, 0x06,
	0x9a, 0xbc, 0x90, 0xa6, 0xa2, 0x1f, 0x4d, 0x3f, 0x8f, 0x1f, 0x44, 0xd2, 0x6e, 0xb8, 0x9b, 0xc7,
	0xfc, 0xdf, 0xff, 0xf7, 0xf2, 0x7e, 0x98, 0x64, 0xa0, 0xdf, 0xb9, 0x2d, 0x99, 0x93, 0xa0, 0xa9,
	0xb1, 0xe0, 0x80, 0x1c, 0x1a, 0xa9, 0x85, 0x01, 0x2d, 0xe8, 0xee, 0x70, 0x74, 0x22, 0x00, 0x44,
	0xc1, 0xe3, 0xba, 0x94, 0x56, 0xeb, 0xd8, 0x49, 0xc5, 0x4b, 0xc7, 0x94, 0x69, 0xb8, 0xd1, 0x4c,
	0x48, 0xf7, 0x56, 0xa5, 0x34, 0x03, 0x15, 0x4b, 0xbd, 0x86, 0xb4, 0x80, 0x0f, 0x30, 0x5c, 0x37,
	0x44, 0x36, 0x15, 0x5c, 0x4f, 0x05, 0x58, 0x15, 0x83, 0xf1, 0x0b, 0xcb, 0xd8, 0x3f, 0x1a, 0xf6,
	0xec, 0x07, 0xe1, 0xc1, 0xed, 0xce, 0x6f, 0xe4, 0x00, 0x07, 0x32, 0x8f, 0xd0, 0x18, 0x4d, 0x3a,
	0x49, 0x20, 0x73, 0x72, 0x8a, 0x07, 0xb9, 0x2c, 0x4d, 0xc1, 0x3e, 0x57, 0x9a, 0x29, 0x1e, 0x05,
	0x63, 0x34, 0xe9, 0x25, 0xfd, 0x4d, 0xb6, 0x60, 0x8a, 0x93, 0x63, 0xdc, 0x93, 0x8a, 0x09, 0xbe,
	0xaa, 0x6c, 0x11, 0xb5, 0xea, 0x79, 0xb7, 0x0e, 0x9e, 0x6d, 0x41, 0xae, 0xf1, 0x20, 0xb3, 0x9c,
	0x39, 0x9e, 0xaf, 0xfc, 0xdd, 0x51, 0x7b, 0x8c, 0x26, 0xfd, 0xcb, 0x11, 0x6d, 0xa4, 0xe8, 0x56,
	0x8a, 0x2e, 0xb7, 0x52, 0x49, 0x7f, 0xd3, 0xf7, 0x89, 0xc7, 0x2b, 0x93, 0xff, 0xe1, 0x9d, 0xff,
	0xf1, 0x4d, 0xdf, 0x27, 0xb3, 0xf0, 0xfb, 0xeb, 0x28, 0xe8, 0xa2, 0x8b, 0x73, 0x1c, 0xde, 0x64,
	0xb5, 0x5f, 0x17, 0xb7, 0xef, 0xef, 0x9e, 0x96, 0xc3, 0x3d, 0x82, 0x71, 0x98, 0xcc, 0x1f, 0x1e,
	0x5f, 0xe6, 0x43, 0x44, 0xf6, 0x71, 0x6b, 0x31, 0x7f, 0x1d, 0x06, 0x69, 0x58, 0x6f, 0xbc, 0xfa,
	0x0d, 0x00, 0x00, 0xff, 0xff, 0x27, 0x90, 0x70, 0x93, 0xa0, 0x01, 0x00, 0x00,
}
